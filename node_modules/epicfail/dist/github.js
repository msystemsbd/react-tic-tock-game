"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.linkToNewIssue = exports.guessRepo = exports.findIssues = void 0;
const node_fetch_1 = __importDefault(require("node-fetch"));
function findIssues(q, repo) {
    return __awaiter(this, void 0, void 0, function* () {
        const query = `repo:${repo} ${q}`;
        try {
            const res = yield node_fetch_1.default(`https://api.github.com/search/issues?q=${encodeURIComponent(query)}&per_page=3`).then((res) => res.json());
            return res === null || res === void 0 ? void 0 : res.items;
        }
        catch (err) {
            return [];
        }
    });
}
exports.findIssues = findIssues;
function guessRepo(str) {
    var _a;
    return (_a = /(?:(?<=github\.com\/)|^)([\w\-_]+\/[\w.\-_]+)/.exec(str)) === null || _a === void 0 ? void 0 : _a[1];
}
exports.guessRepo = guessRepo;
function linkToNewIssue(repo, body) {
    return `https://github.com/${repo}/issues/new${body ? `?body=${encodeURIComponent(body)}` : ''}`;
}
exports.linkToNewIssue = linkToNewIssue;
